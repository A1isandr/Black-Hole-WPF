<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="CommonButton"
           TargetType="Button">

        <Setter Property="BorderBrush" Value="{StaticResource CommonButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource CommonButtonBackgroundBrush}"/>
        <Setter Property="Padding" Value="2, 0, 2, 0"/>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="0"
                    ShadowDepth="0"
                    Color="Transparent"
                    Opacity="0.5"/>
            </Setter.Value>
        </Setter>

        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform
                    ScaleX="1" 
                    ScaleY="1"/>
            </Setter.Value>
        </Setter>

        <Setter Property="RenderTransformOrigin">
            <Setter.Value>
                <Point 
                    X="0.5" 
                    Y="0.5"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">

                    <Border x:Name="ButtonBorder"
                        CornerRadius="20"
                        Cursor="{TemplateBinding Cursor}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}">

                        <Border x:Name="ButtonOverlay"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{Binding ElementName=ButtonBorder, Path=CornerRadius}">

                            <ContentPresenter x:Name="ContentPresenter"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.5">

                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase
                                                    EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="Panel.ZIndex"
                    Value="10"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="Effect.Color"
                                To="Black"
                                Duration="0:0:0.3">

                                <ColorAnimation.EasingFunction>
                                    <BackEase 
                                        EasingMode="EaseOut"/>
                                </ColorAnimation.EasingFunction>
                            </ColorAnimation>

                            <DoubleAnimation
                                Storyboard.TargetProperty="Effect.BlurRadius"
                                To="50"
                                Duration="0:0:0.3">

                                <DoubleAnimation.EasingFunction>
                                    <BackEase
                                        EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="Effect.Color"
                                To="Transparent"
                                Duration="0:0:0.3">

                                <ColorAnimation.EasingFunction>
                                    <BackEase 
                                        EasingMode="EaseIn"/>
                                </ColorAnimation.EasingFunction>
                            </ColorAnimation>

                            <DoubleAnimation
                                Storyboard.TargetProperty="Effect.BlurRadius"
                                To="0"
                                Duration="0:0:0.3">

                                <DoubleAnimation.EasingFunction>
                                    <BackEase
                                        EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <EventTrigger RoutedEvent="PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                            To="0.9" 
                            Duration="0:0:0.1"/>

                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                            To="0.9" 
                            Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation 
                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                            To="1" 
                            Duration="0:0:0.2">

                            <DoubleAnimation.EasingFunction>
                                <BackEase
                                    EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation 
                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                            To="1" 
                            Duration="0:0:0.2">

                            <DoubleAnimation.EasingFunction>
                                <BackEase
                                    EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SvgButton"
           TargetType="Button"
           BasedOn="{StaticResource CommonButton}">

        <Setter Property="Foreground" Value="{StaticResource SvgButtonFillBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0, 0, 0, 0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">

                    <Border x:Name="ButtonBorder"
                            CornerRadius="30"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">

                        <Path x:Name="SvgIcon"
                              Fill="{TemplateBinding Foreground}"
                              Data="{TemplateBinding Content}"
                              Stretch="Uniform"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource AccentGradientBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter 
                                Property="Foreground"
                                Value="{StaticResource AccentGradientBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowHeaderButton"
           TargetType="Button"
           BasedOn="{StaticResource SvgButton}">

        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="{StaticResource WindowHeaderButtonsForegroundFillBrush}"/>
        <Setter Property="Background" Value="{StaticResource WindowHeaderButtonsBackgroundBrush}"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Padding" Value="8, 0, 8, 0"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource WindowHeaderButtonsMouseOverForegroundFillBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseWindowHeaderButton"
           TargetType="Button"
           BasedOn="{StaticResource WindowHeaderButton}">

        <Setter Property="Padding" Value="6, 0, 6, 0"/>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    ShadowDepth="0"
                    Color="Transparent"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Effect.Color"
                            To="{StaticResource CloseWindowButtonMouseOverBackgroundColor}"
                            Duration="0:0:0.3">

                            <ColorAnimation.EasingFunction>
                                <ExponentialEase 
                                    EasingMode="EaseOut"/>
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>

                        <DoubleAnimation
                            Storyboard.TargetProperty="Effect.BlurRadius"
                            To="50" 
                            Duration="0:0:0.3">

                            <DoubleAnimation.EasingFunction>
                                <BackEase 
                                    EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Effect.Color"
                            To="Transparent"
                            Duration="0:0:0.3">

                            <ColorAnimation.EasingFunction>
                                <BackEase 
                                    EasingMode="EaseIn"/>
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>

                        <DoubleAnimation
                            Storyboard.TargetProperty="Effect.BlurRadius"
                            To="0" 
                            Duration="0:0:0.3">

                            <DoubleAnimation.EasingFunction>
                                <ExponentialEase 
                                    EasingMode="EaseIn"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="Background"
                    Value="{StaticResource CloseWindowButtonMouseOverBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TransparentButton"
           TargetType="Button"
           BasedOn="{StaticResource SvgButton}">

        <Setter Property="Opacity" Value="0.5"/>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            To="1"
                            Duration="0:0:0.3">

                            <DoubleAnimation.EasingFunction>
                                <ExponentialEase EasingMode="EaseIn"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            To="0.5"
                            Duration="0:0:0.3">

                            <DoubleAnimation.EasingFunction>
                                <ExponentialEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Icon"
           TargetType="Button">
        
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource IconFillBrush}"></Setter>
        <Setter Property="Background" Value="{StaticResource IconBackgroundBrush}"/>
        <Setter Property="Padding" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">

                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="5"
                        ToolTipService.InitialShowDelay="{TemplateBinding ToolTipService.InitialShowDelay}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">

                        <Path x:Name="IconPath"
                            Data="{TemplateBinding Content}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Uniform"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="IconPath"
                                Property="Fill"
                                Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>