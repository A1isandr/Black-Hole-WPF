<reactiveUi:ReactiveUserControl x:Class="Black_Hole.MVVM.Views.DashboardView"
                                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                                xmlns:local="clr-namespace:Black_Hole.MVVM.Views"
                                xmlns:keys="clr-namespace:Black_Hole.Resources.Keys"
                                xmlns:vm="clr-namespace:Black_Hole.MVVM.ViewModels"
                                xmlns:reactiveUi="http://reactiveui.net"
                                xmlns:help="clr-namespace:Black_Hole.Helpers"
                                x:TypeArguments="vm:DashboardViewModel"
                                x:Name="Dashboard"
                                mc:Ignorable="d" 
                                d:DesignHeight="60" d:DesignWidth="250"
                                Height="60"
                                Margin="0, 0, 0, 15">

    <UserControl.Style>
        <Style
            TargetType="UserControl">
            
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        ShadowDepth="0"
                        BlurRadius="50"
                        Color="Black"
                        Opacity="0.5"/>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Style>

    <UserControl.Resources>
        <help:RectConverter x:Key="RectConverter"/>

        <Storyboard x:Key="{x:Static keys:AnimationResourcesKeys.DashboardFlyOutAnimationKey}"
                    TargetName="Dashboard"
                    TargetProperty="Margin">

            <ThicknessAnimation
                To="15"
                Duration="0:0:0.5"
                BeginTime="0:0:0.1">
            
                <ThicknessAnimation.EasingFunction>
                    <ElasticEase
                        Springiness="5"
                        Oscillations="1"
                        EasingMode="EaseOut"/>
                </ThicknessAnimation.EasingFunction>
            </ThicknessAnimation>
        </Storyboard>

        <Storyboard x:Key="{x:Static keys:AnimationResourcesKeys.DashboardFlyInAnimationKey}"
                    TargetName="Dashboard"
                    TargetProperty="Margin">

            <ThicknessAnimation
                To="15, 15, 15, -39"
                Duration="0:0:0.5"
                BeginTime="0:0:0.5">

                <ThicknessAnimation.EasingFunction>
                    <ElasticEase
                        Springiness="5"
                        Oscillations="1"
                        EasingMode="EaseIn"/>
                </ThicknessAnimation.EasingFunction>
            </ThicknessAnimation>
        </Storyboard>

        <Storyboard x:Key="{x:Static keys:AnimationResourcesKeys.DashboardResetButtonAnimationKey}"
                    TargetName="ResetSimulationButton">
            
            <DoubleAnimation
                Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                From="0"
                To="360"
                Duration="0:0:1.5">
                
                <DoubleAnimation.EasingFunction>
                    <ElasticEase
                        Springiness="8"
                        Oscillations="1"
                        EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="{x:Static keys:AnimationResourcesKeys.DashboardSettingsButtonAnimationKey}"
                    TargetName="SettingsButton">

            <DoubleAnimation
                Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                From="0"
                To="90"
                Duration="0:0:0.3">
            </DoubleAnimation>

            <DoubleAnimation
                Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                From="90"
                To="0"
                Duration="0:0:0.75"
                BeginTime="0:0:0.3">

                <DoubleAnimation.EasingFunction>
                    <ElasticEase
                        Springiness="8"
                        Oscillations="1"
                        EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            Height="20"
            Background="Transparent">
        </Border>

        <Border
            Grid.Row="1"
            CornerRadius="10"
            Background="GhostWhite"
            VerticalAlignment="Bottom"
            Padding="5">

            <Border.Clip>
                <RectangleGeometry 
                    RadiusX="10"
                    RadiusY="10">

                    <RectangleGeometry.Rect>
                        <MultiBinding Converter="{StaticResource RectConverter}">
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="ActualWidth"/>
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}" Path="ActualHeight"/>
                        </MultiBinding>
                    </RectangleGeometry.Rect>
                </RectangleGeometry>
            </Border.Clip>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Line
                    Grid.Column="0"
                    X1="0"
                    Y1="0"
                    X2="0"
                    Stroke="Black"
                    StrokeThickness="1.5"
                    HorizontalAlignment="Right"
                    Y2="{Binding ElementName=Dashboard, Path=ActualHeight}"/>

                <TextBlock x:Name="NumParticlesTextBlock"
                    Grid.Column="0"
                    Text="0"
                    FontWeight="Bold"
                    FontSize="20"
                    TextAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="10, 0, 20, 0">

                    <TextBlock.ToolTip>
                        <ToolTip
                            VerticalOffset="-40">

                            <TextBlock x:Name="NumParticlesTextBlockToolTip"
                                Text="{DynamicResource {x:Static keys:TextResourcesKeys.DashboardParticleCountToolTipTextKey}}"
                                Style="{DynamicResource {x:Static keys:StyleResourcesKeys.ToolTipTextBlockStyleKey}}"/>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>

                <Button x:Name="ResetSimulationButton"
                    Grid.Column="1"
                    Foreground="Black"
                    Content="{Binding Source={StaticResource {x:Static keys:SvgImagesKeys.RefreshIconKey}}, Path=Geometry}"
                    Style="{DynamicResource {x:Static keys:StyleResourcesKeys.SvgButtonStyleKey}}"
                    Margin="10, 0, 10, 0">

                    <Button.ToolTip>
                        <ToolTip
                            VerticalOffset="-40">

                            <TextBlock x:Name="ResetSimulationButtonToolTip"
                               Text="{DynamicResource {x:Static keys:TextResourcesKeys.DashboardResetButtonToolTipTextKey}}"
                               Style="{DynamicResource {x:Static keys:StyleResourcesKeys.ToolTipTextBlockStyleKey}}"/>
                        </ToolTip>
                    </Button.ToolTip>
                </Button>

                <Button x:Name="StopStartSimulationButton"
                    Grid.Column="2"
                    Foreground="Black"
                    Content="{Binding Source={StaticResource {x:Static keys:SvgImagesKeys.PauseIconKey}}, Path=Geometry}"
                    Style="{DynamicResource {x:Static keys:StyleResourcesKeys.SvgButtonStyleKey}}"
                    Margin="5, 0, 10, 0">

                    <Button.ToolTip>
                        <ToolTip
                             VerticalOffset="-40">

                            <TextBlock x:Name="StopStartSimulationButtonToolTip"
                               Text="{DynamicResource {x:Static keys:TextResourcesKeys.DashboardStopStartButtonRunningToolTipTextKey}}"
                               Style="{DynamicResource {x:Static keys:StyleResourcesKeys.ToolTipTextBlockStyleKey}}"/>
                        </ToolTip>
                    </Button.ToolTip>
                </Button>

                <Button x:Name="SettingsButton"
                        Grid.Column="3"
                        Foreground="Black"
                        Content="{Binding Source={StaticResource {x:Static keys:SvgImagesKeys.SettingsVariantIconKey}}, Path=Geometry}"
                        Style="{DynamicResource {x:Static keys:StyleResourcesKeys.SvgButtonStyleKey}}"
                        Padding="2"
                        Margin="5, 0, 10, 0">

                    <Button.ToolTip>
                        <ToolTip
                            VerticalOffset="-40">

                            <TextBlock x:Name="SettingsButtonToolTip"
                                       Text="{DynamicResource {x:Static keys:TextResourcesKeys.DashboardSettingsButtonToolTipTextKey}}"
                                       Style="{DynamicResource {x:Static keys:StyleResourcesKeys.ToolTipTextBlockStyleKey}}"/>
                        </ToolTip>
                    </Button.ToolTip>
                </Button>

                <Line
                    Grid.Column="4"
                    X1="0"
                    Y1="0"
                    X2="0"
                    Stroke="Black"
                    StrokeThickness="1.5"
                    HorizontalAlignment="Left"
                    Y2="{Binding ElementName=Dashboard, Path=ActualHeight}"/>

                <Button x:Name="LockUnlockDashboardButton"
                    Grid.Column="4"
                    Foreground="Black"
                    Content="{Binding Source={StaticResource {x:Static keys:SvgImagesKeys.LockIconKey}}, Path=Geometry}"
                    Style="{DynamicResource {x:Static keys:StyleResourcesKeys.SvgButtonStyleKey}}"
                    Padding="2"
                    Margin="10, 0, 10, 0">

                    <Button.ToolTip>
                        <ToolTip
                            VerticalOffset="-40">

                            <TextBlock x:Name="LockUnlockDashboardButtonToolTip"
                               Text="{DynamicResource {x:Static keys:TextResourcesKeys.DashboardLockUnlockButtonLockedToolTipTextKey}}"
                               Style="{DynamicResource {x:Static keys:StyleResourcesKeys.ToolTipTextBlockStyleKey}}"/>
                        </ToolTip>
                    </Button.ToolTip>
                </Button>
            </Grid>
        </Border>
    </Grid>
</reactiveUi:ReactiveUserControl>
